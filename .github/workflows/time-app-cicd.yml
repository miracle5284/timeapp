name: Build and deploy Time App

on:
  push:
    branches: [ "develop", "staging", "master" ]
  workflow_dispatch:

permissions:
  contents: read

jobs:

  prepare:
    runs-on: ubuntu-latest
    steps:
      - name: Determine Environment
        id: set-env
        run: |
          # Extract the current branch name (without refs/heads/)
          BRANCH_NAME="${GITHUB_REF##*/}"
          echo "Branch is $BRANCH_NAME"

          if [ "$BRANCH_NAME" = "develop" ]; then
            echo "ENVIRONMENT=develop" >> $GITHUB_ENV
            echo "APP_NAME=timer-app-slim-dev" >> $GITHUB_ENV
          elif [ "$BRANCH_NAME" = "staging" ]; then
            echo "ENVIRONMENT=staging" >> $GITHUB_ENV
            echo "APP_NAME=timer-app-slim-staging" >> $GITHUB_ENV
          elif [ "$BRANCH_NAME" = "master" ]; then
            echo "ENVIRONMENT=production" >> $GITHUB_ENV
            echo "APP_NAME=timer-app-slim-prod" >> $GITHUB_ENV
          else
            # Default or fallback
            echo "ENVIRONMENT=unknown" >> $GITHUB_ENV
            echo "APP_NAME=timer-app-slim" >> $GITHUB_ENV

      - name: Get Env Variables
        run: |
          echo "Environment: ${{ ENVIRONMENT }}, App Name: ${{ APP_NAME }}"

  build:
    runs-on: ubuntu-latest
    needs: prepare
    environment:
      name: ${{ env.ENVIRONMENT }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Azure container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ vars.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Build and push container image
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ${{ vars.REGISTRY_LOGIN_SERVER }}/${{ github.repository,, }}:latest
          file: ./Dockerfile

  deploy:
    permissions:
      contents: none
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: ${{ env.ENVIRONMENT }}

    steps:

      - name: Azure Login
        uses: Azure/login@v2.2.0
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.APP_NAME }}
          images: ${{ vars.REGISTRY_LOGIN_SERVER }}/${{ github.repository,, }}:latest
