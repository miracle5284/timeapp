name: Build and deploy Chrona Staging App

on:
#  push:
#    branches: ["staging"]

  workflow_dispatch:

permissions:
  contents: read

jobs:

  build:
    runs-on: ubuntu-latest
    environment:
      name: staging

    steps:

      - name: Lowercase the repo name and username
        run: echo "REPO=${GITHUB_REPOSITORY,,}" >>${GITHUB_ENV}

      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Azure container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ vars.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Build and push container image
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ${{ vars.REGISTRY_LOGIN_SERVER }}/${{ env.REPO }}-staging:latest
          file: ./Dockerfile

  deploy:
    permissions:
      contents: none
    runs-on: ubuntu-latest
    needs: [build]
    environment:
      name: staging

    steps:

      - name: Lowercase the repo name and username
        run: echo "REPO=${GITHUB_REPOSITORY,,}" >>${GITHUB_ENV}

      - name: Azure Login
        uses: Azure/login@v2.2.0
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Fetch secrets from Key Vault
        id: keyvault
        run: |
          secrets=$(az keyvault secret list --vault-name ${{ secrets.KEY_VAULT_NAME }} --query "[].name" -o tsv)

          echo "Fetched secrets:"
          echo "$secrets"

          settings_args=""

          for secret in $secrets
          do
            value=$(az keyvault secret show --vault-name ${{ secrets.KEY_VAULT_NAME }} --name "$secret" --query "value" -o tsv)
            settings_args="$settings_args $secret=$value"
          done

          echo "settings_args<<EOF" >> $GITHUB_OUTPUT
          echo "$settings_args" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Deploy Infrastructure with Bicep
        run: |
          az deployment group create \
            --resource-group ${{ vars.RESOURCE_GROUP }} \
            --template-file infra/bicep/preview-app.bicep \
            --parameters \
              appServiceName=${{ vars.APP_NAME }} \
              appServicePlan=${{ vars.APP_NAME }}-plan \
              imageName=${{ vars.REGISTRY_LOGIN_SERVER }}/${{ env.REPO }}-staging:latest \
              registryUrl=https://${{ secrets.REGISTRY_NAME }} \
              acrUsername=${{ secrets.ACR_USERNAME }} \
              acrPassword=${{ secrets.ACR_PASSWORD }} \
            --only-show-errors --output none

      - name: Update App Settings in Azure Web App
        run: |
          az webapp config appsettings set \
            --name ${{ vars.APP_NAME }} \
            --resource-group ${{ vars.RESOURCE_GROUP }} \
            --settings ${{ steps.keyvault.outputs.settings_args }} \
            --only-show-errors --output none
